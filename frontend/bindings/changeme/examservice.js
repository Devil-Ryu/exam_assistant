// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * ExamService 考试助手服务
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * GetGlobalAnswers 获取全局答案数据
 * @returns {$CancellablePromise<$models.AnswerItem[]>}
 */
export function GetGlobalAnswers() {
    return $Call.ByID(950795820).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * HideWindow 隐藏应用窗口
 * @returns {$CancellablePromise<void>}
 */
export function HideWindow() {
    return $Call.ByID(4117485866);
}

/**
 * NextQuestion 下一题功能
 * @param {$models.ScreenshotArea} area
 * @param {$models.OCRConfig} config
 * @returns {$CancellablePromise<string>}
 */
export function NextQuestion(area, config) {
    return $Call.ByID(3927245231, area, config);
}

/**
 * OpenFileDialog 打开文件对话框
 * @param {string} title
 * @param {string} fileType
 * @returns {$CancellablePromise<$models.FileDialogResult>}
 */
export function OpenFileDialog(title, fileType) {
    return $Call.ByID(883910656, title, fileType).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType2($result);
    }));
}

/**
 * ParseCSVFile 解析CSV文件
 * @param {string} filePath
 * @param {string} encoding
 * @param {string} optionSeparator
 * @param {string} answerSeparator
 * @returns {$CancellablePromise<$models.AnswerItem[]>}
 */
export function ParseCSVFile(filePath, encoding, optionSeparator, answerSeparator) {
    return $Call.ByID(1360511181, filePath, encoding, optionSeparator, answerSeparator).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType1($result);
    }));
}

/**
 * PerformOCR 执行OCR识别
 * @param {$models.ScreenshotArea} area
 * @param {$models.OCRConfig} config
 * @returns {$CancellablePromise<string>}
 */
export function PerformOCR(area, config) {
    return $Call.ByID(4074729449, area, config);
}

/**
 * @param {string} filePath
 * @param {string} encoding
 * @returns {$CancellablePromise<string>}
 */
export function ReadFileContent(filePath, encoding) {
    return $Call.ByID(1443672301, filePath, encoding);
}

/**
 * @param {$models.AnswerItem[]} answers
 * @param {string} query
 * @param {$models.AccuracyFilters} filters
 * @returns {$CancellablePromise<$models.SearchResult[]>}
 */
export function SearchAnswers(answers, query, filters) {
    return $Call.ByID(1576479801, answers, query, filters).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType4($result);
    }));
}

/**
 * SelectArea 选择截图区域
 * @param {string} screenshotData
 * @returns {$CancellablePromise<$models.ScreenshotArea>}
 */
export function SelectArea(screenshotData) {
    return $Call.ByID(2467347915, screenshotData).then(/** @type {($result: any) => any} */(($result) => {
        return $$createType5($result);
    }));
}

/**
 * SetGlobalAnswers 设置全局答案数据
 * @param {$models.AnswerItem[]} answers
 * @returns {$CancellablePromise<void>}
 */
export function SetGlobalAnswers(answers) {
    return $Call.ByID(47794008, answers);
}

/**
 * ShowWindow 显示应用窗口
 * @returns {$CancellablePromise<void>}
 */
export function ShowWindow() {
    return $Call.ByID(4207085603);
}

/**
 * TakeScreenshot 截取屏幕
 * @returns {$CancellablePromise<string>}
 */
export function TakeScreenshot() {
    return $Call.ByID(3097997721);
}

/**
 * TakeScreenshotWithWindowControl 带窗口控制的截图
 * @returns {$CancellablePromise<string>}
 */
export function TakeScreenshotWithWindowControl() {
    return $Call.ByID(1737965870);
}

/**
 * TestLocalOCR 测试本地OCR功能
 * @returns {$CancellablePromise<string>}
 */
export function TestLocalOCR() {
    return $Call.ByID(410662543);
}

/**
 * TestOCRConnection 测试OCR连接
 * @param {$models.OCRConfig} config
 * @returns {$CancellablePromise<string>}
 */
export function TestOCRConnection(config) {
    return $Call.ByID(3566801490, config);
}

// Private type creation functions
const $$createType0 = $models.AnswerItem.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = $models.FileDialogResult.createFrom;
const $$createType3 = $models.SearchResult.createFrom;
const $$createType4 = $Create.Array($$createType3);
const $$createType5 = $models.ScreenshotArea.createFrom;
